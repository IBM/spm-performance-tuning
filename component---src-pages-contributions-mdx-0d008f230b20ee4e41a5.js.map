{"version":3,"file":"component---src-pages-contributions-mdx-0d008f230b20ee4e41a5.js","mappings":"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","sources":["webpack://curam-performance-tuning/./src/pages/contributions.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/curam-performance-tuning/curam-performance-tuning/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use this guide to contribute to the theme. We’ll show you how to get the\ndevelopment environment set up as quickly as possible so you can start\ncontributing.`}</p>\n    </PageDescription>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Project setup</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Development</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Work in a branch</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Sass and CSS Modules</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">VS Code</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Test pages</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Publishing</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Project setup`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Go to\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon\"\n          }}>{`gatsby-theme-carbon`}</a>{`\nand click the `}<inlineCode parentName=\"p\">{`Fork`}</inlineCode>{` button in the top-right corner.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After it’s finished, click on the `}<inlineCode parentName=\"p\">{`Clone or Download`}</inlineCode>{` button and copy the\ncontents.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your terminal, clone the repo into your directory of choice`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`git clone [PASTE_URL_HERE]\ncd gatsby-theme-carbon\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When you clone your forked repo the `}<inlineCode parentName=\"p\">{`origin`}</inlineCode>{` is set to your fork by default.\nYou’ll want to add a remote that points to the upstream repo.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`git remote add upstream git@github.com:carbon-design-system/gatsby-theme-carbon.git\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your terminal, verify that the remotes have been set`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`git remote -v\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Development`}</h2>\n    <p>{`We use `}<a parentName=\"p\" {...{\n        \"href\": \"https://yarnpkg.com/lang/en/docs/install/\"\n      }}>{`yarn`}</a>{` and yarn workspaces to\ndevelop the Carbon Gatsby theme. This allows us to have a development\nenvironment that’s closely linked to the theme with minimal setup. Run\n`}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{` to install all of the projects dependencies.`}</p>\n    <p>{`This project has two packages: the actual theme package (`}<inlineCode parentName=\"p\">{`gatsby-theme-carbon`}</inlineCode>{`)\nand the `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{` package. The example package emulates a project which uses the\ntheme. Its only dependencies are Gatsby, React, and the adjacent theme package.\nThe `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{` package also serves as the theme’s documentation and\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsby-theme-carbon.now.sh\"\n      }}>{`website`}</a>{`; it’s deployed on every merge to\nmain.`}</p>\n    <p>{`New theme development will happen in the theme package while documentation and\ntesting of that change will occur through changes in the example directory.`}</p>\n    <h3>{`Development scripts`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn dev`}</inlineCode>{` – start the development environment`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn dev:clean`}</inlineCode>{` – clear cache and restart dev`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn format`}</inlineCode>{` – format your code with prettier`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn lint`}</inlineCode>{` - check for errors in your javascript`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn test:prefix`}</inlineCode>{` – build and serve with a path prefix`}</li>\n    </ul>\n    <h2>{`Work in a branch`}</h2>\n    <p>{`You should always start a new project by pulling upstream changes into main and\nthen creating a new branch. This workflow ensures you don’t accidentally commit\nanything to your main branch and get stuck when trying to open a pull request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git checkout main\ngit pull upstream main\ngit checkout -b my-branch-name\n`}</code></pre>\n    <h3>{`Commit messages`}</h3>\n    <p>{`For commit messages we use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://gist.github.com/stephenparish/9941e89d80e2bc58a153#allowed-type\"\n      }}>{`Angular commit conventions`}</a>{`\nto dictate whether a commit is for a feature, fix, docs, etc. You need to prefix\nyour commits with one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`feat (feature)`}</li>\n      <li parentName=\"ul\">{`fix (bug fix)`}</li>\n      <li parentName=\"ul\">{`docs (documentation)`}</li>\n      <li parentName=\"ul\">{`style (formatting, missing semi colons, …)`}</li>\n      <li parentName=\"ul\">{`refactor`}</li>\n      <li parentName=\"ul\">{`test (when adding missing tests)`}</li>\n      <li parentName=\"ul\">{`chore (maintain)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git commit -m \"chore: this is a test commit message\"\n`}</code></pre>\n    <h3>{`Opening a Pull request`}</h3>\n    <p>{`When you’re ready to open a pull request, push to your origin remote.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git push origin my-branch-name\n`}</code></pre>\n    <p>{`You’ll get a message in your terminal with a URL to open up a pull request in\nthe upstream repository. Navigate to that URL and be sure to give a detailed\nsummary of your pull request in the title and body section of the form.`}</p>\n    <h2>{`Sass and CSS Modules`}</h2>\n    <p>{`For internal theme components we use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://sass-lang.com/documentation/syntax\"\n      }}>{`Sass`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/css-modules/css-modules#css-modules\"\n      }}>{`CSS Modules`}</a>{`. This\nallows us to take advantage of the Carbon Design System resources while not\nworrying about className collisions. By default, each `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` file will be\nsupplied with all of the Carbon Sass\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon/blob/main/packages/components/src/globals/scss/_vars.scss\"\n      }}>{`variables`}</a>{`:\ncolor, spacing, theme, and motion, as well as type and layout mixins, are\nimported automatically.`}</p>\n    <p>{`You should colocate your stylesheet with the component(s) that import it. If the\ncomponent is `}<inlineCode parentName=\"p\">{`TreeView`}</inlineCode>{` then the stylesheet should be `}<inlineCode parentName=\"p\">{`TreeView.module.scss`}</inlineCode>{`.\nAll contained within the `}<inlineCode parentName=\"p\">{`TreeView`}</inlineCode>{` directory.`}</p>\n    <h3>{`CSS Modules`}</h3>\n    <p>{`You don’t need to prefix your classes as CSS Modules will generate unique class\nnames for you. Import the class from the `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\",\n        \"metastring\": \"path=TreeView.module.scss\",\n        \"path\": \"TreeView.module.scss\"\n      }}>{`.treeView {\n  color: $text-01;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\"\n      }}>{`import { treeView } from './style.css';\n\nconst TreeView = (props) => <div className={treeView} />;\n`}</code></pre>\n    <p>{`For conditionally applying class names, use the `}<inlineCode parentName=\"p\">{`classname`}</inlineCode>{` library. Note how\nwe’re using a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://tylermcginnis.com/computed-property-names/\"\n      }}>{`computed property name`}</a>{` for\nthe property being based to `}<inlineCode parentName=\"p\">{`cx`}</inlineCode>{`. That’s because the className isn’t literally\n`}<inlineCode parentName=\"p\">{`\"long\"`}</inlineCode>{` it’s a value generated by CSS Modules and placed in the `}<inlineCode parentName=\"p\">{`long`}</inlineCode>{`\nvariable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\"\n      }}>{`import cx from 'classname';\nimport { treeView, long } from './style.css';\n\nconst TreeView = (props) => {\n  const className = cx(treeView, {\n    [long]: props.long,\n  });\n  const TreeView = (props) => <div className={className} />;\n};\n`}</code></pre>\n    <p>{`If you need to target a global class not processed by CSS Modules, you can do so\nwith the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/css-modules/css-modules#exceptions\"\n      }}>{`global selector`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`:global(.bx--grid) .codeBlock {\n  @include carbon--type-style('code-01');\n}\n`}</code></pre>\n    <h2>{`VS Code`}</h2>\n    <p>{`To get linting error feedback while writing javascript and SCSS in VS Code,\ninstall the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\"\n      }}>{`stylelint`}</a>{`\nand\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\"\n      }}>{`ESlint`}</a>{`\nextensions. We use ESLint’s Prettier rules to format and lint all of our\nJavaScript in one pass. To get your code to format properly on save, add the\nfollowing to a `}<inlineCode parentName=\"p\">{`.vscode/settings.json`}</inlineCode>{` in the root of your project`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/settings.json\",\n        \"path\": \".vscode/settings.json\"\n      }}>{`{\n  \"editor.formatOnSave\": true,\n  \"[javascript]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"[javascriptreact]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"eslint.autoFixOnSave\": true,\n  \"prettier.disableLanguages\": [\"javascript\", \"javascriptreact\"]\n}\n`}</code></pre>\n    <p>{`To lint the entire project and get errors in your `}<inlineCode parentName=\"p\">{`Problems`}</inlineCode>{` tray, you can add\nthe following to a `}<inlineCode parentName=\"p\">{`.vscode/tasks.json`}</inlineCode>{` file in the root of your project. You\ncan run these tasks with `}<inlineCode parentName=\"p\">{`cmd+shift+d`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/tasks.json\",\n        \"path\": \".vscode/tasks.json\"\n      }}>{`{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:js\",\n      \"problemMatcher\": \"$eslint-stylish\"\n    },\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:scss\",\n      \"problemMatcher\": {\n        \"owner\": \"stylelint\",\n        \"fileLocation\": [\"relative\", \"\\${workspaceFolder}\"],\n        \"pattern\": [\n          {\n            \"regexp\": \"^([^\\\\\\\\s].*)$\",\n            \"file\": 1\n          },\n          {\n            \"regexp\": \"^\\\\\\\\s+(\\\\\\\\d+):(\\\\\\\\d+)\\\\\\\\s+(✖|warning)\\\\\\\\s+(.*)\\\\\\\\s\\\\\\\\s+(.*)$\",\n            \"line\": 1,\n            \"column\": 2,\n            \"severity\": 3,\n            \"message\": 4,\n            \"code\": 5,\n            \"loop\": true\n          }\n        ]\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <h2>{`Test pages`}</h2>\n    <p>{`If you want to add examples of what you are working on or see changes you’ve\nmade, you can add an MDX file to `}<inlineCode parentName=\"p\">{`packages/src/pages/test`}</inlineCode>{` that will be visible\nat `}<inlineCode parentName=\"p\">{`(your-server-name)/test/(added-file)`}</inlineCode>{` during development. If you do add a\npage to the `}<inlineCode parentName=\"p\">{`/test`}</inlineCode>{` directory, update the below list with the file you added and\nits purpose to be included with your pull request.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/curam-performance-tuning/test/spacing-audit\"\n        }}><inlineCode parentName=\"a\">{`Spacing audit`}</inlineCode></a>{`: use this page to test spacing around\ncomponents when combined in common patterns.`}</li>\n    </ul>\n    <h2>{`Publishing`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`figure out if it’s patch or feature`}</li>\n      <li parentName=\"ol\">{`from the root of the package run `}<inlineCode parentName=\"li\">{`lerna publish patch`}</inlineCode>{` or\n`}<inlineCode parentName=\"li\">{`lerna publish minor`}</inlineCode></li>\n      <li parentName=\"ol\">{`git push upstream main —follow-tags`}</li>\n      <li parentName=\"ol\">{`In the project’s\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/releases\"\n        }}>{`release tab`}</a>{`,\nedit the new release to include a summary of new changes`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","small","parentName","isMDXComponent"],"sourceRoot":""}